const request = require('supertest')
const server = require('./server')
const User = require('./database/models/bd_usuarios')
const sequelize = require('./database/connection')

beforeAll(async () => {
    await sequelize.sync({force:true})
})

afterAll(async () => {
    await sequelize.close(); // Fecha a conexão após os testes
})
  
describe("TESTES DE SERVIDOR", () => {
    it("Retorna um status 200 para o servidor ligado", async () => {
        const response = await request(server)
        .get('/')

        expect(response.status).toBe(200)
    })

})

describe("TESTES DE USUARIO", () => {
    test("Criar um usuário no banco em memória", async () => {
        const user = await User.create(
            { 
                nome: "João",
                email: "joao@email.com",
                telefone: "11946287961",
                senha: "123456"
            });
      
        expect(user).toHaveProperty("id");
        expect(user.nome).toBe("João");
        expect(user.email).toBe("joao@email.com");

        const response = await request(server)
        .post("/cadUser")
        .send({ 
                nome: "João",
                email: "joao@email.com",
                telefone: "11946287961",
                senha: "123456"
        })

        expect(response.status).toBe(201)
      })

    
       
})
// describe("Pontos de coleta", () => {
//     it("Deve cadastar um ponto de coleta com sucesso", async () => {
//         const response = await request(server)
//         .post('/cadastrarPonto')
//         .send({
//             email : "bioservicea@gmail.com",
//             instituicao : "Bioservice Carapicuiba",
//             cep : "06331150",
//             cidade : "Carapicuiba",
//             bairo : "COHAB 2",
//             rua : "Rua das ilusões",
//             tipo : "Eletronico"
//         })

//         expect(response.status).toBe(201)
//         expect(response.body.message).toBe("Ponto criado com sucesso")
//     })
// })